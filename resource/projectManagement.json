{
  "openapi": "3.0.1",
  "info": {
    "title": "projectManagement",
    "version": "1.0.0"
  },
  "paths": {
    "/api/configs/yara": {
      "get": {
        "tags": [
          "Configs"
        ],
        "summary": "Get YARA rules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Configs"
        ],
        "summary": "Update YARA rules",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/configs/sast/{language}": {
      "get": {
        "tags": [
          "Configs"
        ],
        "summary": "Get SAST rule",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "description": "Programming language group",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProgrammingLanguageGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Configs"
        ],
        "summary": "Update SAST rule",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "description": "Programming language group",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProgrammingLanguageGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Current license",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseLicenseData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseLicenseData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseLicenseData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "License"
        ],
        "summary": "Update license",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/license/fingerprint": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get server fingerprint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/license/languageGroups": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get list available program language groups.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgrammingLanguageGroupModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgrammingLanguageGroupModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgrammingLanguageGroupModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/mailing/sendTestEmail": {
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Send test email",
        "parameters": [
          {
            "name": "localeId",
            "in": "query",
            "description": "Locale id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Test mail model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestMailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestMailModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/mailing/mailProfiles": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Get all mail profiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailProfileModelWithId"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailProfileModelWithId"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailProfileModelWithId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Mailing"
        ],
        "summary": "Create mail profile",
        "requestBody": {
          "description": "Mail profile model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/mailing/mailProfiles/light": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Get all light mail profiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LightMailProfileModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LightMailProfileModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LightMailProfileModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/mailing/mailProfiles/{mailProfileId}": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Get mail profile model",
        "parameters": [
          {
            "name": "mailProfileId",
            "in": "path",
            "description": "Mail profile id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MailProfileModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailProfileModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailProfileModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "Mailing"
        ],
        "summary": "Update mail profile",
        "parameters": [
          {
            "name": "mailProfileId",
            "in": "path",
            "description": "Mail profile id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Mail profile model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfilePatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfilePatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfilePatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MailProfilePatchModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Mailing"
        ],
        "summary": "Delete mail profile",
        "parameters": [
          {
            "name": "mailProfileId",
            "in": "path",
            "description": "Mail profile id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nullable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/mailing/mailProfiles/{mailProfileId}/usedInProjects": {
      "get": {
        "tags": [
          "Mailing"
        ],
        "summary": "Get all projects when used mail profile",
        "parameters": [
          {
            "name": "mailProfileId",
            "in": "path",
            "description": "Mail profile id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BriefProjectInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BriefProjectInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BriefProjectInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get projects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/name/{name}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project by name without details",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{name}/exists": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Check exists project by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all scan results of project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanResultModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanResultModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanResultModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Add scan result to repository",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "ScanResult creation model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScanResultCreationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanResultCreationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanResultCreationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScanResultCreationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults/last": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get last scan result of project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/base": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create project with base settings",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/blackBoxSettings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "BlackBox settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlackBoxSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlackBoxSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlackBoxSettingsModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "BlackBox settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Extended box settings model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BlackBoxSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlackBoxSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BlackBoxSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BlackBoxSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/withScans": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get projects with high vulnerabilities statistic",
        "responses": {
          "200": {
            "description": "Returns projects with high vulnerabilities statistic",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/withScans/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project with high vulnerabilities statistic",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns project with high vulnerabilities statistic",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWithExtendedInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults/{scanResultId}/issues": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get issues",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project`s id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "description": "Scan result` id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VulnerabilityModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VulnerabilityModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VulnerabilityModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults/{scanResultId}/issues/headers": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get issues headers",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project`s id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "description": "Scan result id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "localeId",
            "in": "query",
            "description": "locale to localize headers",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/{issueId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get issue",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project`s id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityFullModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityFullModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityFullModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/filePatterns": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Project`s file patterns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Project`s file patterns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "File patterns",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/defaultSettings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get default settings for existing project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/exclusions": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get exlusions files/dir from scan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileFolderExclusionsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileFolderExclusionsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileFolderExclusionsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update exlusions files/dir from scan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Exclusions Model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FileFolderExclusionsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileFolderExclusionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FileFolderExclusionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FileFolderExclusionsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/defaultSettings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get default settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseProjectSettingsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/settings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Project settings model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/settingsChangingDate": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get date of last changing scan settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/completeConfiguration": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Complete project configuration",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseProjectSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanSettings/{scanSettingsId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get scan settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanSettingsId",
            "in": "path",
            "description": "Scan settings id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScanSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanSettingsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanSettings/{scanSettingsId}/aiproj": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Download aiproj file",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanSettingsId",
            "in": "path",
            "description": "Scan settings id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/securityPolicies": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get policies rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityPoliciesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityPoliciesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityPoliciesModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update policies rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Security policies model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPoliciesModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPoliciesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPoliciesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPoliciesModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/sastRules": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get SAST rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SastRulesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SastRulesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SastRulesModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update SAST rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "SAST rules model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SastRulesBaseModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SastRulesBaseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SastRulesBaseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SastRulesBaseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/yaraRules": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get YARA rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/YaraRulesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YaraRulesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/YaraRulesModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update YARA rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "SAST rules model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/YaraRulesBaseModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YaraRulesBaseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/YaraRulesBaseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/YaraRulesBaseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/analysisRules": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get analysis rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisRulesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisRulesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisRulesModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update analysis rules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Analysis rules model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRulesBaseModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRulesBaseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRulesBaseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRulesBaseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/securityPoliciesTemplate": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get policies rules template",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/yaraRulesTemplate": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get YARA rules template",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/sastRulesTemplate/{language}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get policies rules template",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProgrammingLanguageGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults/{scanResultId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get scan result of project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "description": "ScanResult id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/{issueId}/state": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Change single issue approval state",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details of changing approval status",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueApprovalStateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueApprovalStateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueApprovalStateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueApprovalStateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/{issueId}/favorite": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Change single issue favorite state",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details of changing favorite status",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueIsFavoriteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueIsFavoriteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueIsFavoriteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssueIsFavoriteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/state": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Change many issues approval state",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details of changing approval statuses",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesApprovalStateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesApprovalStateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesApprovalStateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesApprovalStateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/favorite": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Change many issues favorite state",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Details of changing favorite statuses",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesFavoriteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesFavoriteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesFavoriteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIssuesFavoriteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/scanResults/{scanResultId}/errors": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Update scan errors",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "description": "Scan result id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanErrorModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanErrorModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanErrorModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/tracker/extendedSettings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get issue tracker integration settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update issue tracker integration settings",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Project id",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueTrackerIntegrationSettingsModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/activeScans": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Active scans",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveScanModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveScanModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveScanModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/issues/{issueId}/resources": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get issue`s descriptions and metadatas",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "localeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueResourcesModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueResourcesModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueResourcesModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/pin": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Pin project for current user",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/projects/{projectId}/unpin": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Unpin project for current user",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/templates": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all reports templates",
        "parameters": [
          {
            "name": "localeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withContent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportTemplateModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportTemplateModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportTemplateModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Create report template",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/templates/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get report template by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "localeId",
            "in": "query",
            "description": "Locale id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "needAddCss",
            "in": "query",
            "description": "Add CSS styles?",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update report template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateUpsertModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete report template by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/templates/{type}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get report template by type",
        "operationId": "TemplateByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportType"
            }
          },
          {
            "name": "localeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/userTemplates/{name}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get user report template by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplateModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/templates/check": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Check template on errors. Pass template text in body",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateValidationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateValidationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/reports/generate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate report\r\nPass sessionId in model for progress notifications.\r\nsessionId will be removed when the report generation process becomes asynchronous",
        "requestBody": {
          "description": "Report generate model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportGenerateModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": { }
            }
          }
        }
      }
    },
    "/api/reports/preview": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Preview report",
        "parameters": [
          {
            "name": "localeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": { }
            }
          }
        }
      }
    },
    "/api/reports/parameters": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get report parameters for current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportParametersModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportParametersModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportParametersModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Save report parameters for current user",
        "requestBody": {
          "description": "Report parameters model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportParametersModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportParametersModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ActiveScanModel": {
        "type": "object",
        "properties": {
          "scanResultId": {
            "type": "string",
            "format": "uuid"
          },
          "progress": {
            "$ref": "#/components/schemas/ScanProgressModel"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectModel"
          }
        },
        "additionalProperties": false
      },
      "AnalysisRulesBaseModel": {
        "type": "object",
        "properties": {
          "sastRules": {
            "$ref": "#/components/schemas/SastRulesBaseModel"
          },
          "yaraRules": {
            "$ref": "#/components/schemas/YaraRulesBaseModel"
          }
        },
        "additionalProperties": false
      },
      "AnalysisRulesModel": {
        "type": "object",
        "properties": {
          "sastRules": {
            "$ref": "#/components/schemas/SastRulesModel"
          },
          "yaraRules": {
            "$ref": "#/components/schemas/YaraRulesModel"
          }
        },
        "additionalProperties": false
      },
      "ApiErrorModel": {
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ApiErrorType"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiErrorType": {
        "enum": [
          "None",
          "INCORRECT_USER_AND_PASSWORD",
          "USER_ID_IS_EMPTY",
          "MEMBER_ALREADY_EXISTS",
          "PROJECT_ROLE_PERMISSIONS_ALREADY_EXISTS",
          "ACCESS_TOKEN_IS_INCORRECT",
          "ACCESS_TOKEN_WITH_SAME_NAME_ALREADY_EXISTS",
          "PASSWORD_IS_INCORRECT",
          "USER_IS_INCORRECT",
          "INITIATOR_NOT_FOUND",
          "CREDENTIAL_STORE_IS_UNVAILABLE_OR_TAINTED",
          "USER_BLOCKED",
          "EXT_AUTH_PROVIDERS_GET_ERROR",
          "EXT_AUTH_PROVIDERS_BY_SAME_SCHEME_LIMIT_ERROR",
          "EXT_AUTH_PROVIDERS_AT_LEAST_ONE_ENABLED_LIMIT_ERROR",
          "EXT_AUTH_PROVIDER_GET_NOT_FOUND",
          "EXT_AUTH_PROVIDER_GET_ERROR",
          "EXT_AUTH_PROVIDER_UPDATE_ERROR",
          "EXT_AUTH_PROVIDER_DELETE_ERROR",
          "EXT_AUTH_PROVIDER_IS_INCORRECT",
          "EXT_AUTH_PROVIDER_NAME_IS_EMPTY",
          "EXT_AUTH_PROVIDER_NAME_LENGTH_LIMIT",
          "EXT_AUTH_PROVIDER_WITH_SAME_NAME_ALREADY_EXISTS",
          "EXT_AUTH_SETTINGS_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_OPENID_AUTHORITY_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_OPENID_CLIENT_ID_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_OPENID_CLIENT_SECRET_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_ISSUER_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_ALLOWED_ISSUER_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_ACS_URL_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_LOGOUT_URL_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_SIGN_VALIDATION_CERT_IS_EMPTY",
          "EXT_AUTH_SETTINGS_SAML2_SIGN_VALIDATION_CERT_SIZE_LIMIT",
          "EXT_AUTH_SETTINGS_SAML2_SIGNING_CERT_IS_EMPTY",
          "EXT_AUTH_SETTINGS_SAML2_SIGNING_CERT_SIZE_LIMIT",
          "EXT_AUTH_SETTINGS_SAML2_NAMEID_POLICY_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_SIGN_ALG_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_SAML2_SIGN_ALG_IS_EMPTY",
          "EXT_AUTH_SETTINGS_LDAP_HOST_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_LDAP_HOST_HAS_SCHEMA",
          "EXT_AUTH_SETTINGS_LDAP_PORT_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_LDAP_SSL_PORT_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_LDAP_BASE_DN_IS_INCORRECT",
          "EXT_AUTH_SETTINGS_TEST_CONNECTION_FAILED",
          "EXT_AUTH_ROLE_MAPPINGS_EMPTY_FIELDS",
          "EXT_AUTH_ROLE_MAPPINGS_NO_GLOBAL_ROLES",
          "EXT_AUTH_SIGNIN_ERROR",
          "EXT_AUTH_SIGNIN_CALLBACK_ERROR",
          "EXT_AUTH_SIGNIN_PROVIDER_IS_EMPTY",
          "EXT_AUTH_SIGNIN_PROVIDER_IS_EMPTY_OR_DISABLED",
          "EXT_AUTH_SIGNIN_SCOPE_TYPE_IS_INCORRECT",
          "EXT_AUTH_SIGNIN_PROVIDER_IS_NOT_AUTHENTICATED",
          "EXT_AUTH_SIGNIN_INVALID_CREDENTIALS",
          "EXT_AUTH_SIGNIN_INVALID_SESSION_ID",
          "EXT_AUTH_SIGNIN_SCHEME_IS_INCORRECT",
          "EXT_AUTH_SIGNIN_OPENID_INVALID_CONFIGURATION",
          "EXT_AUTH_SIGNIN_OPENID_TOKEN_EXPIRED",
          "EXT_AUTH_SIGNIN_OPENID_INCONSISTENT_RESPONSE_MODE_AND_TYPE",
          "EXT_AUTH_SIGNIN_SAML2_SETTINGS_IS_EMPTY",
          "EXT_AUTH_SIGNIN_SAML2_RESPONSE_STATUS_ERROR",
          "EXT_AUTH_SIGNIN_SAML2_INVALID_SIGNATURE",
          "EXT_AUTH_SIGNIN_LDAP_SSL_REQUIRED",
          "EXT_AUTH_SIGNIN_LDAP_SETTINGS_IS_EMPTY",
          "EXT_AUTH_SIGN_OUT_ERROR",
          "EXT_AUTH_SIGN_OUT_PROVIDER_IS_EMPTY",
          "EXT_AUTH_SIGN_OUT_TOKEN_NOT_FOUND",
          "EXT_AUTH_SIGN_OUT_SCHEME_IS_INCORRECT",
          "EXT_AUTH_SIGN_OUT_OPENID_ERROR",
          "EXT_AUTH_SIGN_OUT_SAML2_ERROR",
          "EXT_AUTH_SIGN_OUT_SAML2_EMPTY_LOGOUT_URL_ERROR",
          "EXT_AUTH_SESSION_GET_ERROR",
          "EXT_AUTH_SESSION_CLAIMS_NOT_DEFINED",
          "EXT_AUTH_SESSION_NOT_FOUND",
          "EXT_AUTH_SESSION_EXPIRED",
          "EXT_AUTH_SESSION_PROVIDER_NOT_FOUND",
          "EXT_AUTH_SESSION_USER_NOT_EQUAL",
          "EXT_AUTH_METADATA_SAML2_ERROR",
          "EXT_AUTH_USER_PROVISION_ERROR",
          "EXT_AUTH_USER_PROVISION_USER_IS_NOT_DEFINED",
          "EXT_AUTH_USER_PROVISION_USER_LOGIN_FIELD_IS_NOT_MAPPED",
          "EXT_AUTH_USER_PROVISION_NAME_FIELD_IS_NOT_MAPPED",
          "UPDATE_PACKAGE_VERSION_IS_ALREADY_UPLOADED",
          "UPDATE_PACKAGE_UPLOADED_IS_ALREADY_STARTED",
          "UPDATE_PACKAGE_UNKNOWN_PRODUCT",
          "UPDATE_PACKAGE_VERSION_INVALID",
          "UPDATE_PACKAGE_VERSION_IS_NOT_UPLOADED",
          "UPDATE_SERVER_PROCESS_RUN_TIMEOUT",
          "UPDATE_SERVER_PARAMETERS_INVALID",
          "UPDATE_SERVER_INSTALLER_EXIT_WITH_ERROR",
          "UPDATE_SERVER_PACKAGE_IS_INCORRECT",
          "UPDATE_SERVER_NOT_ENOUGH_SPACE",
          "CERTIFICATE_FILE_IS_EMPTY",
          "CERTIFICATE_IS_ALREADY_INSTALLED",
          "CERTIFICATE_IS_NOT_VALID",
          "URI_IS_NOT_VALID",
          "PROJECT_WITH_SAME_NAME_ALREADY_EXISTS",
          "UNEXPECTED_SCAN_STAGE",
          "PROJECT_NOT_FOUND",
          "SCANRESULT_NOT_FOUND",
          "INVALID_JSON_FIELDS",
          "INCORRECT_SAST_RULES",
          "UNEXPECTED_LANGUAGE",
          "MAIL_PROFILE_NOT_FOUND",
          "UPDATER_NOT_SET",
          "INVALID_QUERY_PARAMETER",
          "ISSUE_TRACKER_CONNECTION_NOT_FOUND",
          "ISSUE_TRACKER_CONNECTION_SETTINGS_NOT_SET",
          "ISSUE_TRACKER_SETTINGS_ID_NOT_SET",
          "ISSUE_TRACKER_CREDENTIALS_NOT_SET",
          "ISSUE_TRACKER_HOST_IS_INCORRECT",
          "ISSUE_TRACKER_OAUTH_DATA_NOT_SET",
          "ISSUE_TRACKER_TRACKER_NOT_FOUND",
          "ISSUE_TRACKER_TRACKER_NOT_FOUND_WITH_OAUTH",
          "ISSUE_TRACKER_INVALID_TICKET_LINK",
          "ISSUE_TRACKER_IMPOSSIBLE_SKIP_UPDATE_CREDENTIALS",
          "ISSUE_TRACKER_UNSUPPORTED_FIELDS_COFIGURATION",
          "ISSUE_TRACKER_TICKET_CREATION_FAILED",
          "ISSUE_TRACKER_PRIORITIES_GETTING_FAILED",
          "ISSUE_TRACKER_USERS_GETTING_FAILED",
          "ISSUE_TRACKER_STATUSES_GETTING_FAILED",
          "ISSUE_TRACKER_FIELDS_GETTING_FAILED",
          "ISSUE_TRACKER_OPTIONS_GETTING_FAILED",
          "ISSUE_TRACKER_EXISTING_TICKETS_GETTING_FAILED",
          "ISSUE_TRACKER_COMPONENTS_GETTING_FAILED",
          "ISSUE_TRACKER_CAPTCHA_CHALLENGE",
          "ISSUE_TRACKER_AUTHENTICATION_DENIED_DETAILED",
          "ISSUE_TRACKER_AUTHENTICATION_DENIED",
          "ISSUE_TRACKER_AUTHENTICATION_FAILED",
          "ISSUE_TRACKER_OAUTH_SETTINGS_INVALID",
          "ISSUE_TRACKER_OAUTH_AUTHENTICATION_GETTING_ACCESS_TOKEN_FAILED",
          "ISSUE_TRACKER_OAUTH_AUTHENTICATION_INVALID_ACCESS_TOKEN_RETURNED",
          "ISSUE_TRACKER_OAUTH_AUTHENTICATION_GETTING_REQUEST_TOKEN_FAILED",
          "ISSUE_TRACKER_OAUTH_AUTHENTICATION_INVALID_REQUEST_TOKEN_RETURNED",
          "FS_SOURCE_IS_BUSY",
          "DIRECTORY_NOT_FOUND",
          "ISSUE_ATTACH_TICKET_LINK_FAILED",
          "COMMENT_POLICY_FAILED_COMMENT_IS_EMPTY",
          "PROJECTS_COUNT_LIMITED_BY_LICENSE",
          "LICENSE_FILE_IS_INVALID",
          "LICENSE_EXPIRED",
          "LICENSE_FINGERPRINT_ERROR",
          "LICENSE_WITHOUT_FINGERPRINT",
          "LANGUAGE_NOT_ALLOWED_BY_LICENCE",
          "LICENSED_AGENTS_LIMIT_EXCEED",
          "COULD_NOT_STORE_LICENSE",
          "LICENSE_SERVICE_NOT_AVAILABLE",
          "LICENSE_UNLICENSED_USAGE",
          "UNKNOWN_SOURCE_VERSION_CONTROL_SYSTEM",
          "SOURCE_VERSION_CONTROL_SYSTEM_ERROR",
          "INVALID_VERSION_CONTROL_SYSTEM_SETTINGS",
          "SCAN_AGENT_NOT_FOUND",
          "SCAN_ALREADY_SCHEDULED",
          "INCORRECT_AGENT_STATUS",
          "SCAN_AGENT_WAS_SUSPENDED",
          "SCAN_AGENT_IS_SCANNING",
          "SCAN_NOT_FOUND",
          "ACTIVE_SCAN_AGENTS_NOT_FOUND",
          "SCAN_AGENT_IS_ACTIVE",
          "SCHEDULING_IS_LOCKED",
          "SCAN_AGENT_NUMBER_EXCEED",
          "SERVER_CERTIFICATE_NOT_FOUND",
          "FILESYSTEM_ERROR_ACCESS_DENIED",
          "VAULT_CREDENTIALS_NOT_FOUND",
          "REPORT_TEMPLATE_NOT_FOUND",
          "REPORT_GENERATE_FAILED",
          "REPORT_TEMPLATE_INVALID",
          "REPORT_TEMPLATE_UNKNOWN_FORMAT",
          "REPORT_INCORRECT_PARAMETERS",
          "REPORT_TEMPLATE_WITH_SAME_NAME_ALREADY_EXISTS",
          "REPORT_TEMPLATE_FILE_NAME_INCORRECT_MACROS",
          "INVALID_VERSION_CONTROL_SYSTEM_CONNECTION_SETTINGS",
          "COULD_NOT_STORE_PROJECT",
          "COULD_NOT_STORE_SCAN_SETTINGS",
          "FILES_FOR_DOWNLOAD_NOT_FOUND",
          "PROJECTS_FILES_NOT_FOUND",
          "INVALID_UPLOAD_PATH",
          "INVALID_PATH_PARAMETER",
          "COULD_NOT_CHECKOUT_PROJECT",
          "COULD_NOT_UPDATE_PROJECT_SOURCES_FROM_SOURCE_CONTROL",
          "USER_ID_IS_INCORRECT"
        ],
        "type": "string",
        "format": ""
      },
      "AuthProviderModel": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scheme": {
            "$ref": "#/components/schemas/AuthProviderScheme"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthProviderScheme": {
        "enum": [
          "OpenIdConnect",
          "Saml2",
          "Ldap"
        ],
        "type": "string",
        "format": ""
      },
      "AuthType": {
        "enum": [
          "Form",
          "Http",
          "None",
          "RawCookie"
        ],
        "type": "string",
        "format": ""
      },
      "BaseProjectSettingsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "programmingLanguageGroup": {
            "$ref": "#/components/schemas/ProgrammingLanguageGroup"
          },
          "projectUrl": {
            "type": "string",
            "nullable": true
          },
          "whiteBox": {
            "$ref": "#/components/schemas/WhiteBoxSettingsModel"
          },
          "blackBoxEnabled": {
            "type": "boolean"
          },
          "blackBox": {
            "$ref": "#/components/schemas/BlackBoxSettingsBaseModel"
          }
        },
        "additionalProperties": false
      },
      "BlackBoxAuthenticationFullModel": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AuthType"
          },
          "form": {
            "$ref": "#/components/schemas/BlackBoxFormAuthenticationModel"
          },
          "http": {
            "$ref": "#/components/schemas/BlackBoxHttpAuthenticationModel"
          },
          "cookie": {
            "$ref": "#/components/schemas/BlackBoxRawCookieAuthenticationModel"
          }
        },
        "additionalProperties": false
      },
      "BlackBoxFormAuthenticationModel": {
        "type": "object",
        "properties": {
          "loginKey": {
            "type": "string",
            "nullable": true
          },
          "passwordKey": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "formAddress": {
            "type": "string",
            "nullable": true
          },
          "formXPath": {
            "type": "string",
            "nullable": true
          },
          "validationTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlackBoxHttpAuthenticationModel": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "validationAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlackBoxProxySettingsModel": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/ProxyType"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlackBoxRawCookieAuthenticationModel": {
        "type": "object",
        "properties": {
          "validationAddress": {
            "type": "string",
            "nullable": true
          },
          "validationTemplate": {
            "type": "string",
            "nullable": true
          },
          "cookie": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlackBoxScanLevel": {
        "enum": [
          "None",
          "Fast",
          "Normal",
          "Full"
        ],
        "type": "string",
        "format": ""
      },
      "BlackBoxSettingsBaseModel": {
        "type": "object",
        "properties": {
          "site": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/BlackBoxScanLevel"
          },
          "scanScope": {
            "$ref": "#/components/schemas/ScanScope"
          },
          "additionalHttpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "authentication": {
            "$ref": "#/components/schemas/BlackBoxAuthenticationFullModel"
          },
          "proxySettings": {
            "$ref": "#/components/schemas/BlackBoxProxySettingsModel"
          },
          "runAutocheckAfterScan": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BlackBoxSettingsModel": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "site": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/BlackBoxScanLevel"
          },
          "scanScope": {
            "$ref": "#/components/schemas/ScanScope"
          },
          "additionalHttpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "authentication": {
            "$ref": "#/components/schemas/BlackBoxAuthenticationFullModel"
          },
          "proxySettings": {
            "$ref": "#/components/schemas/BlackBoxProxySettingsModel"
          },
          "runAutocheckAfterScan": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BlackboxVulnerabilytyModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "scannedUrl": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BriefProjectInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeIssueApprovalStateModel": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/IssueApprovalState"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeIssueIsFavoriteModel": {
        "type": "object",
        "properties": {
          "isFavorite": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeIssuesApprovalStateModel": {
        "type": "object",
        "properties": {
          "issuesStates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IssueApprovalState"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeIssuesFavoriteModel": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CodeChunkModel": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "beginLine": {
            "type": "integer",
            "format": "int32"
          },
          "endLine": {
            "type": "integer",
            "format": "int32"
          },
          "beginColumn": {
            "type": "integer",
            "format": "int32"
          },
          "endColumn": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ComponentsSettingsModel": {
        "type": "object",
        "properties": {
          "useCustomYaraRules": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ComponentVersionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DotNetProjectType": {
        "enum": [
          "None",
          "Solution",
          "WebSite"
        ],
        "type": "string",
        "format": ""
      },
      "DotNetSettingsModel": {
        "type": "object",
        "properties": {
          "projectType": {
            "$ref": "#/components/schemas/DotNetProjectType"
          },
          "solutionFile": {
            "type": "string",
            "nullable": true
          },
          "webSiteFolder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnterpriseLicenseData": {
        "type": "object",
        "properties": {
          "licenseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "client": {
            "type": "string",
            "nullable": true
          },
          "currentDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "limitProjects": {
            "type": "integer",
            "format": "int32"
          },
          "maxAgents": {
            "type": "integer",
            "format": "int32"
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingLanguage"
            },
            "nullable": true
          },
          "isValid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ErrorBaseModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ErrorLevel": {
        "enum": [
          "Error",
          "Warn",
          "Info",
          "Debug",
          "Trace"
        ],
        "type": "string",
        "format": ""
      },
      "ExtendedScanStatisticModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "progress": {
            "$ref": "#/components/schemas/ScanProgressModel"
          },
          "threatLevel": {
            "$ref": "#/components/schemas/ThreatLevel"
          },
          "high": {
            "type": "integer",
            "format": "int32"
          },
          "medium": {
            "type": "integer",
            "format": "int32"
          },
          "low": {
            "type": "integer",
            "format": "int32"
          },
          "potential": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "filesTotal": {
            "type": "integer",
            "format": "int32"
          },
          "filesScanned": {
            "type": "integer",
            "format": "int32"
          },
          "urlsScanned": {
            "type": "integer",
            "format": "int32"
          },
          "urlsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "scanDuration": {
            "type": "string",
            "format": "date-span"
          },
          "policyState": {
            "$ref": "#/components/schemas/PolicyState"
          }
        },
        "additionalProperties": false
      },
      "FileFolderExclusionsModel": {
        "type": "object",
        "properties": {
          "exclusions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueApprovalState": {
        "enum": [
          "None",
          "Approval",
          "Discard",
          "NotExist",
          "AutoApproval"
        ],
        "type": "string",
        "format": ""
      },
      "IssueBaseMetadata": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueType"
          },
          "level": {
            "$ref": "#/components/schemas/IssueLevel"
          }
        },
        "additionalProperties": false
      },
      "IssueDescriptionModelBase": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string",
            "nullable": true
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueType"
          }
        },
        "additionalProperties": false
      },
      "IssueLevel": {
        "enum": [
          "None",
          "Potential",
          "Low",
          "Medium",
          "High"
        ],
        "type": "string",
        "format": ""
      },
      "IssueResourcesModel": {
        "type": "object",
        "properties": {
          "descriptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IssueDescriptionModelBase"
            },
            "nullable": true
          },
          "metadatas": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IssueBaseMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueTrackerIntegrationSettingsModel": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "connectionId": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "type": "string",
            "nullable": true
          },
          "ticketTypeId": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/TicketTemplateModel"
          }
        },
        "additionalProperties": false
      },
      "IssueType": {
        "enum": [
          "Unknown",
          "Vulnerability",
          "Weakness",
          "Configuration",
          "Fingerprint",
          "BlackBox",
          "YaraMatch"
        ],
        "type": "string",
        "format": ""
      },
      "JavaSettingsModel": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "unpackUserPackages": {
            "type": "boolean"
          },
          "userPackagePrefixes": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "$ref": "#/components/schemas/JavaVersions"
          }
        },
        "additionalProperties": false
      },
      "JavaVersions": {
        "enum": [
          "v1_8",
          "v1_11"
        ],
        "type": "string",
        "format": ""
      },
      "JiraTicketLinkModel": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "nullable": true
          },
          "connectionId": {
            "type": "string",
            "format": "uuid"
          },
          "ticketId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LightMailProfileModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailAuthentication": {
        "type": "object",
        "properties": {
          "isAuthRequired": {
            "type": "boolean"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailAuthenticationPatch": {
        "type": "object",
        "properties": {
          "isAuthRequired": {
            "type": "boolean",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailingProjectSettings": {
        "type": "object",
        "properties": {
          "state": {
            "type": "boolean"
          },
          "mailProfileId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "emailRecipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailProfileModel": {
        "type": "object",
        "properties": {
          "authentication": {
            "$ref": "#/components/schemas/MailAuthentication"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "compressReport": {
            "type": "boolean"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "enableSsl": {
            "type": "boolean"
          },
          "considerCertificateErrors": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MailProfileModelWithId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "authentication": {
            "$ref": "#/components/schemas/MailAuthentication"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "compressReport": {
            "type": "boolean"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "enableSsl": {
            "type": "boolean"
          },
          "considerCertificateErrors": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MailProfilePatchModel": {
        "type": "object",
        "properties": {
          "authentication": {
            "$ref": "#/components/schemas/MailAuthenticationPatch"
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "compressReport": {
            "type": "boolean",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "enableSsl": {
            "type": "boolean",
            "nullable": true
          },
          "considerCertificateErrors": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Nullable": {
        "type": "object",
        "additionalProperties": false
      },
      "PermissionType": {
        "enum": [
          "None",
          "ManageIssueTrackerTicket",
          "ManagePermissions",
          "ViewProject",
          "CreateProject",
          "DeleteProject",
          "ChangeIssueStatus",
          "ManageScan",
          "ManageGlobalParams",
          "DeleteScanResult",
          "UpdateProject",
          "ManageUpdate",
          "ManageIssueTracker",
          "DiscardIssueWithoutComment",
          "ApproveIssueWithoutComment",
          "ManageIssueTrackerIntegration",
          "ManageLicense",
          "DeleteIssueTrackerTicket",
          "WorkWithScanScheduler",
          "ReadSettings"
        ],
        "type": "string",
        "format": ""
      },
      "PolicyState": {
        "enum": [
          "None",
          "Rejected",
          "Confirmed"
        ],
        "type": "string",
        "format": ""
      },
      "ProgrammingLanguage": {
        "enum": [
          "DotNet",
          "Php",
          "Java",
          "Html",
          "JavaScript",
          "All",
          "SandBox",
          "Binary",
          "PlSql",
          "TSql",
          "Aspx",
          "C",
          "CPlusPlus",
          "ObjectiveC",
          "Swift",
          "MySql",
          "Python",
          "CSharp",
          "VB",
          "Go",
          "Kotlin",
          "None"
        ],
        "type": "string",
        "format": ""
      },
      "ProgrammingLanguageGroup": {
        "enum": [
          "None",
          "Java",
          "CSharp",
          "VB",
          "Php",
          "JavaScript",
          "Python",
          "ObjectiveC",
          "Swift",
          "CAndCPlusPlus",
          "Go",
          "Kotlin",
          "Sql"
        ],
        "type": "string",
        "format": ""
      },
      "ProgrammingLanguageGroupModel": {
        "type": "object",
        "properties": {
          "languageGroup": {
            "$ref": "#/components/schemas/ProgrammingLanguageGroup"
          },
          "isTaintLanguageGroup": {
            "type": "boolean"
          },
          "isSupportsDependenciesDownloading": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProjectModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "settingsId": {
            "type": "string",
            "format": "uuid"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProjectSettingsModel": {
        "type": "object",
        "properties": {
          "projectSource": {
            "$ref": "#/components/schemas/ProjectSourceModel"
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "programmingLanguageGroup": {
            "$ref": "#/components/schemas/ProgrammingLanguageGroup"
          },
          "whiteBoxSettings": {
            "$ref": "#/components/schemas/WhiteBoxSettingsModel"
          },
          "launchParameters": {
            "type": "string",
            "nullable": true
          },
          "useAvailablePublicAndProtectedMethods": {
            "type": "boolean"
          },
          "downloadDependencies": {
            "type": "boolean"
          },
          "javaSettings": {
            "$ref": "#/components/schemas/JavaSettingsModel"
          },
          "dotNetSettings": {
            "$ref": "#/components/schemas/DotNetSettingsModel"
          },
          "componentsSettings": {
            "$ref": "#/components/schemas/ComponentsSettingsModel"
          },
          "reportAfterScan": {
            "$ref": "#/components/schemas/MailingProjectSettings"
          },
          "useSastRules": {
            "type": "boolean"
          },
          "useSecurityPolicies": {
            "type": "boolean"
          },
          "skipGitIgnoreFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProjectSourceModel": {
        "type": "object",
        "properties": {
          "sourceType": {
            "$ref": "#/components/schemas/SourceType"
          },
          "lastDateTimeUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "updaterInfo": {
            "$ref": "#/components/schemas/UpdaterInfoModel"
          },
          "hidePathAndUserName": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProjectWithExtendedInfo": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingLanguage"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean"
          },
          "scanStartErrors": {
            "$ref": "#/components/schemas/ScanStartErrors"
          },
          "scanAppType": {
            "$ref": "#/components/schemas/ScanAppType"
          },
          "lastScan": {
            "$ref": "#/components/schemas/ExtendedScanStatisticModel"
          },
          "prevScan": {
            "$ref": "#/components/schemas/ExtendedScanStatisticModel"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionType"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "settingsId": {
            "type": "string",
            "format": "uuid"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProxyType": {
        "enum": [
          "Http",
          "HttpNoConnect",
          "Socks4",
          "Socks5"
        ],
        "type": "string",
        "format": ""
      },
      "ReportFormatType": {
        "enum": [
          "Html",
          "Xml",
          "Json",
          "Custom",
          "Md"
        ],
        "type": "string",
        "format": ""
      },
      "ReportGenerateModel": {
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/UserReportParametersModel"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "scanResultId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "localeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportTemplateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/ReportType"
          },
          "outputFileName": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/UserModel"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportTemplateUpsertModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "outputFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportType": {
        "enum": [
          "Custom",
          "PlainReport",
          "AutoCheck",
          "Nist",
          "Oud4",
          "Owasp",
          "Owaspm",
          "Pcidss",
          "Sans",
          "Json",
          "Xml"
        ],
        "type": "string",
        "format": ""
      },
      "SastRulesBaseModel": {
        "type": "object",
        "properties": {
          "useRules": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SastRulesModel": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "object",
            "properties": {
              "None": {
                "type": "string"
              },
              "Java": {
                "type": "string"
              },
              "CSharp": {
                "type": "string"
              },
              "VB": {
                "type": "string"
              },
              "Php": {
                "type": "string"
              },
              "JavaScript": {
                "type": "string"
              },
              "Python": {
                "type": "string"
              },
              "ObjectiveC": {
                "type": "string"
              },
              "Swift": {
                "type": "string"
              },
              "CAndCPlusPlus": {
                "type": "string"
              },
              "Go": {
                "type": "string"
              },
              "Kotlin": {
                "type": "string"
              },
              "Sql": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "useRules": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ScanAppType": {
        "enum": [
          "None",
          "Binary",
          "Configuration",
          "Fingerprint",
          "Java",
          "CSharp",
          "PHP",
          "PmTaint",
          "BlackBox",
          "JavaScript",
          "DependencyCheck"
        ],
        "type": "string",
        "format": ""
      },
      "ScanEnvironmentModel": {
        "type": "object",
        "properties": {
          "installatorVersion": {
            "$ref": "#/components/schemas/ComponentVersionModel"
          }
        },
        "additionalProperties": false
      },
      "ScanErrorModel": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorBaseModel"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isCritical": {
            "type": "boolean"
          },
          "level": {
            "$ref": "#/components/schemas/ErrorLevel"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "scanResultId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ScanMode": {
        "enum": [
          "FromEntryPoint",
          "FromPublicProtected",
          "Taint",
          "Unknown"
        ],
        "type": "string",
        "format": ""
      },
      "ScanModuleGroupType": {
        "enum": [
          "WhiteBox",
          "BlackBox"
        ],
        "type": "string",
        "format": ""
      },
      "ScanModuleType": {
        "enum": [
          "VulnerableSourceCode",
          "DataFlowAnalysis",
          "PatternMatching",
          "Components",
          "Configuration",
          "BlackBox"
        ],
        "type": "string",
        "format": ""
      },
      "ScanProgressModel": {
        "type": "object",
        "properties": {
          "stage": {
            "$ref": "#/components/schemas/Stage"
          },
          "subStage": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScanResultCreationModel": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "scanDate": {
            "type": "string",
            "format": "date-time"
          },
          "scanEnvironment": {
            "$ref": "#/components/schemas/ScanEnvironmentModel"
          }
        },
        "additionalProperties": false
      },
      "ScanResultModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "settingsId": {
            "type": "string",
            "format": "uuid"
          },
          "scanDate": {
            "type": "string",
            "format": "date-time"
          },
          "progress": {
            "$ref": "#/components/schemas/ScanProgressModel"
          },
          "statistic": {
            "$ref": "#/components/schemas/ScanStatisticModel"
          },
          "scanEnvironment": {
            "$ref": "#/components/schemas/ScanEnvironmentModel"
          },
          "isRunFromQueue": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ScanScope": {
        "enum": [
          "Folder",
          "Domain",
          "Path"
        ],
        "type": "string",
        "format": ""
      },
      "ScanSettingsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "programmingLanguage": {
            "$ref": "#/components/schemas/ProgrammingLanguage"
          },
          "scanModules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanModuleType"
            },
            "nullable": true
          },
          "customParameters": {
            "type": "string",
            "nullable": true
          },
          "fileFolderExclusions": {
            "type": "string",
            "nullable": true
          },
          "useSastRules": {
            "type": "boolean"
          },
          "useSecurityPolicies": {
            "type": "boolean"
          },
          "skipGitIgnoreFiles": {
            "type": "boolean"
          },
          "downloadDependencies": {
            "type": "boolean"
          },
          "usePublicAnalysisMethod": {
            "type": "boolean"
          },
          "blackBoxSettings": {
            "$ref": "#/components/schemas/BlackBoxSettingsBaseModel"
          },
          "javaSettings": {
            "$ref": "#/components/schemas/JavaSettingsModel"
          },
          "dotNetSettings": {
            "$ref": "#/components/schemas/DotNetSettingsModel"
          },
          "componentsSettings": {
            "$ref": "#/components/schemas/ComponentsSettingsModel"
          },
          "sourceSettings": {
            "$ref": "#/components/schemas/SourceScanSettingsModel"
          },
          "emailRecipients": {
            "type": "string",
            "nullable": true
          },
          "sendEmailWithReportsAfterScan": {
            "type": "boolean"
          },
          "useIssueTrackerIntegration": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ScanStartErrors": {
        "enum": [
          "None",
          "License",
          "Sources",
          "Language",
          "Modules",
          "LicenseExpired",
          "ScanSchedulerIsLocked"
        ],
        "type": "string",
        "format": ""
      },
      "ScanStatisticModel": {
        "type": "object",
        "properties": {
          "high": {
            "type": "integer",
            "format": "int32"
          },
          "medium": {
            "type": "integer",
            "format": "int32"
          },
          "low": {
            "type": "integer",
            "format": "int32"
          },
          "potential": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "filesTotal": {
            "type": "integer",
            "format": "int32"
          },
          "filesScanned": {
            "type": "integer",
            "format": "int32"
          },
          "urlsScanned": {
            "type": "integer",
            "format": "int32"
          },
          "urlsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "scanDuration": {
            "type": "string",
            "format": "date-span"
          },
          "policyState": {
            "$ref": "#/components/schemas/PolicyState"
          }
        },
        "additionalProperties": false
      },
      "SecurityPoliciesModel": {
        "type": "object",
        "properties": {
          "checkSecurityPoliciesAccordance": {
            "type": "boolean"
          },
          "securityPolicies": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SourceControlScanSettingsModel": {
        "type": "object",
        "properties": {
          "repositoryUrl": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SourceScanSettingsModel": {
        "type": "object",
        "properties": {
          "scanTargetName": {
            "type": "string",
            "nullable": true
          },
          "sourceType": {
            "$ref": "#/components/schemas/SourceType"
          },
          "vcsSettings": {
            "$ref": "#/components/schemas/SourceControlScanSettingsModel"
          }
        },
        "additionalProperties": false
      },
      "SourceType": {
        "enum": [
          "Empty",
          "File",
          "Folder",
          "SourceControl"
        ],
        "type": "string",
        "format": ""
      },
      "Stage": {
        "enum": [
          "Unknown",
          "VFSSetup",
          "Initialize",
          "Precheck",
          "Scan",
          "Finalize",
          "Done",
          "Failed",
          "Aborted",
          "Enqueued",
          "Autocheck"
        ],
        "type": "string",
        "format": ""
      },
      "TemplateValidationResult": {
        "type": "object",
        "properties": {
          "hasErrors": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestMailModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "authentication": {
            "$ref": "#/components/schemas/MailAuthenticationPatch"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "smtpServerAddress": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "enableSsl": {
            "type": "boolean",
            "nullable": true
          },
          "considerCertificateErrors": {
            "type": "boolean",
            "nullable": true
          },
          "emailRecipient": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThreatLevel": {
        "enum": [
          "None",
          "Potential",
          "Low",
          "Medium",
          "High"
        ],
        "type": "string",
        "format": ""
      },
      "TicketTemplateModel": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdaterInfoModel": {
        "type": "object",
        "properties": {
          "tokenName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "isRoot": {
            "type": "boolean"
          },
          "isExternal": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "needChangePassword": {
            "type": "boolean"
          },
          "authProvider": {
            "$ref": "#/components/schemas/AuthProviderModel"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserReportParametersModel": {
        "type": "object",
        "properties": {
          "useFilters": {
            "type": "boolean"
          },
          "includeDFD": {
            "type": "boolean"
          },
          "includeGlossary": {
            "type": "boolean"
          },
          "reportTemplateId": {
            "type": "string",
            "format": "uuid"
          },
          "formatType": {
            "$ref": "#/components/schemas/ReportFormatType"
          },
          "createPdfPrintVersion": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VulnerabilityFullModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "scanResultId": {
            "type": "string",
            "format": "uuid"
          },
          "counter": {
            "type": "integer",
            "format": "int64"
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "bestPlaceToFix": {
            "$ref": "#/components/schemas/CodeChunkModel"
          },
          "vulnerableExpression": {
            "$ref": "#/components/schemas/CodeChunkModel"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/IssueLevel"
          },
          "scanMode": {
            "$ref": "#/components/schemas/ScanMode"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "approvalState": {
            "$ref": "#/components/schemas/IssueApprovalState"
          },
          "isSuppressed": {
            "type": "boolean"
          },
          "isSuspected": {
            "type": "boolean"
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueType"
          },
          "scanModule": {
            "$ref": "#/components/schemas/ScanModuleGroupType"
          },
          "vulnerableConfiguration": {
            "$ref": "#/components/schemas/VulnerableConfigurationModel"
          },
          "vulnerableComponent": {
            "$ref": "#/components/schemas/VulnerableComponentFullModel"
          },
          "yaraMatch": {
            "$ref": "#/components/schemas/YaraMatchModel"
          },
          "blackBox": {
            "$ref": "#/components/schemas/BlackboxVulnerabilytyModel"
          },
          "jiraTicketLink": {
            "$ref": "#/components/schemas/JiraTicketLinkModel"
          },
          "vulnerableCode": {
            "$ref": "#/components/schemas/VulnerableCodeModel"
          }
        },
        "additionalProperties": false
      },
      "VulnerabilityModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "counter": {
            "type": "integer",
            "format": "int64"
          },
          "isNew": {
            "type": "boolean"
          },
          "isSecondOrder": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/IssueLevel"
          },
          "scanMode": {
            "$ref": "#/components/schemas/ScanMode"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "approvalState": {
            "$ref": "#/components/schemas/IssueApprovalState"
          },
          "hasJiraTicket": {
            "type": "boolean"
          },
          "isSuppressed": {
            "type": "boolean"
          },
          "isSuspected": {
            "type": "boolean"
          },
          "vulnerableValue": {
            "type": "string",
            "nullable": true
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueType"
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "scanModule": {
            "$ref": "#/components/schemas/ScanModuleGroupType"
          },
          "bestPlaceToFixFile": {
            "type": "string",
            "nullable": true
          },
          "bestPlaceToFixLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "entryPointFile": {
            "type": "string",
            "nullable": true
          },
          "entryPointLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sourceFile": {
            "type": "string",
            "nullable": true
          },
          "sourceLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vulnerableComponent": {
            "$ref": "#/components/schemas/VulnerableComponentModel"
          },
          "hasAdditionalConditions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VulnerableCodeModel": {
        "type": "object",
        "properties": {
          "entryPoint": {
            "$ref": "#/components/schemas/CodeChunkModel"
          },
          "dataTrace": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeChunkModel"
            },
            "nullable": true
          },
          "taintDataEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeChunkModel"
            },
            "nullable": true
          },
          "autocheckExploit": {
            "type": "string",
            "nullable": true
          },
          "requestExploit": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VulnerableComponentFullModel": {
        "type": "object",
        "properties": {
          "cveIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "component": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VulnerableComponentModel": {
        "type": "object",
        "properties": {
          "component": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VulnerableConfigurationModel": {
        "type": "object",
        "properties": {
          "existingValue": {
            "type": "string",
            "nullable": true
          },
          "recommendedValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhiteBoxSettingsModel": {
        "type": "object",
        "properties": {
          "searchForVulnerableSourceCodeEnabled": {
            "type": "boolean"
          },
          "dataFlowAnalysisEnabled": {
            "type": "boolean"
          },
          "patternMatchingEnabled": {
            "type": "boolean"
          },
          "searchForVulnerableComponentsEnabled": {
            "type": "boolean"
          },
          "searchForConfigurationFlawsEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "YaraMatchModel": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "ruleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "YaraRulesBaseModel": {
        "type": "object",
        "properties": {
          "useRules": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "YaraRulesModel": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "string",
            "nullable": true
          },
          "useRules": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}