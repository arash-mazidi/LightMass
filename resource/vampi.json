{
  "openapi": "3.0.1",
  "info": {
    "title": "VAmPI",
    "description": "OpenAPI v3 specs for VAmPI",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "components": {},
  "paths": {
    "/": {
      "get": {
        "tags": [
          "home"
        ],
        "summary": "VAmPI home",
        "description": "VAmPI is a vulnerable on purpose API. It was created in order to evaluate the efficiency of third party tools in identifying vulnerabilities in APIs but it can alsssho be used in learning/teaching purposes.",
        "operationId": "api_views.main.basic",
        "responses": {
          "200": {
            "description": "Home - Help",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "Help": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves all users",
        "description": "Displays all users with basic information",
        "operationId": "api_views.users.get_all_users",
        "x-crudOperationSemantics": "read-multi",
        "x-crudResourceType": "user",
        "responses": {
          "200": {
            "description": "See basic info about all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string",
                        "x-crudResourceIdentifier": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1/_debug": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves all details for all users",
        "description": "Displays all details for all users",
        "operationId": "api_views.users.debug",
        "x-crudOperationSemantics": "read-multi",
        "x-crudResourceType": "user",
        "responses": {
          "200": {
            "description": "See all details of the users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "admin": {
                        "type": "boolean"
                      },
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string",
                        "x-crudResourceIdentifier": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register new user",
        "description": "Register new user",
        "operationId": "api_views.users.register_user",
        "x-crudOperationSemantics": "create",
        "x-crudResourceType": "user",
        "requestBody": {
          "description": "Username of the user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true,
                    "minLength": 1,
                    "description": "My description",
                    "x-crudResourceIdentifier": true
                  },
                  "password": {
                    "required": true,
                    "type": "string"
                  },
                  "email": {
                    "required": true,
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "fail"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          }
        }
      }
    },
    "/users/v1/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login to VAmPI",
        "description": "Login to VAmPI",
        "operationId": "api_views.users.login_user",
        "requestBody": {
          "description": "Username of the user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucessfully logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auth_token": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "fail"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1/{username}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves user by username",
        "description": "Displays user by username",
        "operationId": "api_views.users.get_by_username",
        "x-crudOperationSemantics": "read",
        "x-crudResourceType": "user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "retrieve username data",
            "x-crudResourceIdentifier": true,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully display user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "x--crudResourceIdentifier": true
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes user by username (Only Admins)",
        "description": "Deletes user by username (Only Admins)",
        "operationId": "api_views.users.delete_user",
        "x-crudOperationSemantics": "delete",
        "x-crudResourceType": "user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Delete username",
            "x-crudResourceIdentifier": true,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "fail"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/users/v1/{username}/email": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update users email",
        "description": "Update a single users email",
        "operationId": "api_views.users.update_email",
        "x-crudOperationSemantics": "update",
        "x-crudResourceType": "user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username to update email",
            "x-crudResourceIdentifier": true,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "field to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successfully updated user email",
            "content": {}
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1/{username}/password": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update users password",
        "description": "Update users password",
        "operationId": "api_views.users.update_password",
        "x-crudOperationSemantics": "update",
        "x-crudResourceType": "user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username to update password",
            "x-crudResourceIdentifier": true,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "field to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Sucessfully updated users password",
            "content": {}
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/v1": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Retrieves all books",
        "description": "Retrieves all books",
        "operationId": "api_views.books.get_all_books",
        "x-crudOperationSemantics": "read-multi",
        "x-crudResourceType": "book",
        "responses": {
          "200": {
            "description": "See all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Books": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "book_title": {
                            "type": "string",
                            "x-crudResourceIdentifier": true
                          },
                          "user": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "books"
        ],
        "summary": "Add new book",
        "description": "Add new book",
        "operationId": "api_views.books.add_new_book",
        "x-crudOperationSemantics": "create",
        "x-crudResourceType": "book",
        "requestBody": {
          "description": "Add new book with title and secret content only available to the user who added it.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "book_title": {
                    "type": "string",
                    "required": true,
                    "x-crudResourceIdentifier": true
                  },
                  "secret": {
                    "required": true,
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucessfully added a book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "fail"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/v1/{book_title}": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Retrieves book by title along with secret",
        "description": "Retrieves book by title along with secret. Only the owner may retrieve it",
        "operationId": "api_views.books.get_by_title",
        "x-crudOperationSemantics": "read",
        "x-crudResourceType": "book",
        "parameters": [
          {
            "name": "book_title",
            "in": "path",
            "description": "retrieve book data",
            "x-crudResourceIdentifier": true,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve book info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "book_title": {
                      "type": "string",
                      "x-crudResourceIdentifier": true
                    },
                    "owner": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "fail"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}